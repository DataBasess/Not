<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Block extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Block_model');
    } 

    /*
     * Listing of st_stores
     */
    function index()
    {
        $data['blocks'] = $this->Block_model->get_all_st_stores();

        $this->load->view('block/index',$data);
    }

    /*
     * Adding a new st_store
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'name' => $this->input->post('name'),
				'price' => $this->input->post('price'),
				'status' => $this->input->post('status'),
				'description' => $this->input->post('description'),
            );
            
            $st_store_id = $this->St_store_model->add_st_store($params);
            redirect('Reserv/index');
        }
        else
        {
            $this->load->view('st_store/add');
        }
    } 

    public function select($id) {
        $data['result'] = $this->Block_model->read_box($id);
        //$this->load->view('template/backheader');
        $this->load->view('block/select', $data);
        //$this->load->view('template/backfooter');
    }

    public function new_user() {
        
        if ($this->input->server('REQUEST_METHOD') == TRUE) {

          if($this->input->post('username')=='admin' && $this->session->userdata('username')!='admin'){
            redirect('dashboard/permission','refresh');
            exit();
          }

          
            /*
             * อัพโหลดรูปภาพ******************************************************
             */

            
            $config['upload_path'] = './pictures/';
            $config['allowed_types'] = 'gif|jpg|png';
            $config['max_size'] = 1024 * 1; // 1mb
            $config['overwrite'] = TRUE;
            $config['file_name'] = ($this->input->post('datafile') == '') ? uniqid() : $this->input->post('datafile');
        

            
            $this->load->library('upload', $config);
            $no_file_error = "<p>You did not select a file to upload.</p>";
            if (!$this->upload->do_upload('userfile') && $this->upload->display_errors() != $no_file_error) {
                $checkfile = FALSE;
            } else {
                $checkfile = TRUE;
                
                 // ปรับขนาดรูปภาพ*************************************************
                 
                $this->load->library('image_lib');
                $config['image_library'] = 'gd2';
                $config['source_image'] = $this->upload->upload_path . $this->upload->file_name;
                $config['maintain_ratio'] = FALSE;
                $config['width'] = 160;
                $config['height'] = 160;
                $config['new_image'] = 'slip_' . $this->upload->file_name;


                $this->image_lib->initialize($config);
                $this->image_lib->resize();
                $this->image_lib->clear();

                //--------------------------------------------------------------
                @unlink($this->upload->upload_path . $this->upload->file_name);
            } 

            


            //------------------------------------------------------------------
            

            if ($this->form_validation->run() == TRUE && $checkfile == TRUE) {
                $this->session->set_flashdata(
                        array(
                            'msginfo' => '<div class="pad margin no-print"><div style="margin-bottom: 0!important;" class="callout callout-info"><h4><i class="fa fa-info"></i> ข้อความจากระบบ</h4>ทำรายการสำเร็จ</div></div>'
                        )
                );

                $data = $this->upload->data();
                if ($_FILES['userfile']['name'] <> '') {
                    $datafile = ($this->input->post('datafile') == '') ? $data['file_name'] : $this->input->post('datafile');
                } else {
                    $datafile = ($this->input->post('id') == '') ? '' : $this->input->post('datafile');
                }


                $this->User_model->add_user($this->input->post('id'), $datafile);


                redirect('Reserv', 'refresh');
            } else {
                $data = array(
                    
                    'err_filename' => form_error('filename'),
                    'err_filename' => $this->upload->display_errors()
                );
                $this->session->set_flashdata($data);

                if ($_FILES['userfile']['name'] <> '' && $this->input->post('datafile') == '') {
                    @unlink($this->upload->upload_path . "slip_" . $this->upload->file_name);
                } 
            }
            if ($this->input->post('id') == NULL) {
                redirect('Reserv/select');
            } else {
                redirect('user/edit/' . $this->input->post('id'));
            }
        }
    } 
 

    /*
     * Editing a st_store
     */
    function edit($id)
    {   
        // check if the st_store exists before trying to edit it
        $data['st_store'] = $this->St_store_model->get_st_store($id);
        
        if(isset($data['st_store']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'name' => $this->input->post('name'),
					'price' => $this->input->post('price'),
					'status' => $this->input->post('status'),
					'description' => $this->input->post('description'),
                );

                $this->St_store_model->update_st_store($id,$params);            
                redirect('Reserv/index');
            }
            else
            {
                $this->load->view('Reserv/edit',$data);
            }
        }
        else
            show_error('The st_store you are trying to edit does not exist.');
    } 

    /*
     * Deleting st_store
     */
    function remove($id)
    {
        $st_store = $this->St_store_model->get_st_store($id);

        // check if the st_store exists before trying to delete it
        if(isset($st_store['id']))
        {
            $this->St_store_model->delete_st_store($id);
            redirect('Reserv/index');
        }
        else
            show_error('The st_store you are trying to delete does not exist.');
    }
    
}
